# Memory Test Vectors for fx68k
# Format: operation,address,data,expected_result,cycles,notes

# Read operations
READ.B,0x001000,0x12,0x12,8,byte_read
READ.W,0x001000,0x1234,0x1234,8,word_read
READ.L,0x001000,0x12345678,0x12345678,12,long_read
READ.B,0x001001,0x34,0x34,8,byte_read_offset
READ.W,0x001002,0x5678,0x5678,8,word_read_aligned
READ.L,0x001004,0x9ABCDEF0,0x9ABCDEF0,12,long_read_aligned

# Write operations
WRITE.B,0x002000,0xAA,0xAA,8,byte_write
WRITE.W,0x002000,0xBBCC,0xBBCC,8,word_write
WRITE.L,0x002000,0xDDEEFF00,0xDDEEFF00,12,long_write
WRITE.B,0x002001,0x11,0x11,8,byte_write_offset
WRITE.W,0x002002,0x2233,0x2233,8,word_write_aligned
WRITE.L,0x002004,0x44556677,0x44556677,12,long_write_aligned

# Bus cycle timing tests
READ.B,0x003000,0x55,0x55,8,normal_timing
READ.W,0x003000,0x6677,0x6677,8,word_timing
READ.L,0x003000,0x8899AABB,0x8899AABB,12,long_timing
WRITE.B,0x003000,0xCC,0xCC,8,write_timing
WRITE.W,0x003000,0xDDEE,0xDDEE,8,write_word_timing
WRITE.L,0x003000,0xFF001122,0xFF001122,12,write_long_timing

# Address decoding tests
READ.B,0x000000,0x00,0x00,8,zero_address
READ.B,0xFFFFFF,0xFF,0xFF,8,max_address
READ.B,0x800000,0x80,0x80,8,mid_address
READ.W,0x000000,0x0000,0x0000,8,zero_word_address
READ.W,0xFFFFFE,0xFFFF,0xFFFF,8,max_word_address
READ.L,0x000000,0x00000000,0x00000000,12,zero_long_address
READ.L,0xFFFFFC,0xFFFFFFFF,0xFFFFFFFF,12,max_long_address

# Data bus operations
READ.B,0x004000,0x00,0x00,8,zero_data
READ.B,0x004000,0xFF,0xFF,8,max_data
READ.B,0x004000,0x55,0x55,8,pattern_data
READ.B,0x004000,0xAA,0xAA,8,inverted_pattern
READ.W,0x004000,0x0000,0x0000,8,zero_word_data
READ.W,0x004000,0xFFFF,0xFFFF,8,max_word_data
READ.W,0x004000,0x5555,0x5555,8,pattern_word_data
READ.W,0x004000,0xAAAA,0xAAAA,8,inverted_pattern_word
READ.L,0x004000,0x00000000,0x00000000,12,zero_long_data
READ.L,0x004000,0xFFFFFFFF,0xFFFFFFFF,12,max_long_data
READ.L,0x004000,0x55555555,0x55555555,12,pattern_long_data
READ.L,0x004000,0xAAAAAAAA,0xAAAAAAAA,12,inverted_pattern_long

# Memory protection tests
READ.B,0x005000,0x12,0x12,8,protected_read_allowed
WRITE.B,0x005000,0x34,0x34,8,protected_write_allowed
READ.B,0x006000,0x56,0x56,8,unprotected_read
WRITE.B,0x006000,0x78,0x78,8,unprotected_write
READ.B,0x007000,0x9A,0x9A,8,supervisor_read
WRITE.B,0x007000,0xBC,0xBC,8,supervisor_write

# Boundary conditions
READ.B,0x001FFF,0xDE,0xDE,8,page_boundary
READ.W,0x001FFE,0xF012,0xF012,8,word_boundary
READ.L,0x001FFC,0x3456789A,0x3456789A,12,long_boundary
WRITE.B,0x002FFF,0xBC,0xBC,8,write_page_boundary
WRITE.W,0x002FFE,0xDE34,0xDE34,8,write_word_boundary
WRITE.L,0x002FFC,0x56789ABC,0x56789ABC,12,write_long_boundary

# Alignment tests
READ.W,0x001000,0x1234,0x1234,8,aligned_word
READ.W,0x001001,0x3456,0x3456,8,unaligned_word
READ.L,0x001000,0x12345678,0x12345678,12,aligned_long
READ.L,0x001001,0x3456789A,0x3456789A,12,unaligned_long
WRITE.W,0x002000,0xABCD,0xABCD,8,aligned_write_word
WRITE.W,0x002001,0xCDEF,0xCDEF,8,unaligned_write_word
WRITE.L,0x002000,0xABCDEF01,0xABCDEF01,12,aligned_write_long
WRITE.L,0x002001,0xCDEF0123,0xCDEF0123,12,unaligned_write_long

# Cache behavior tests
READ.B,0x008000,0x11,0x11,8,first_cache_read
READ.B,0x008000,0x11,0x11,4,cached_read
READ.W,0x008000,0x1122,0x1122,4,cached_word_read
READ.L,0x008000,0x11223344,0x11223344,4,cached_long_read
WRITE.B,0x008000,0x55,0x55,8,first_cache_write
WRITE.B,0x008000,0x66,0x66,4,cached_write
WRITE.W,0x008000,0x7788,0x7788,4,cached_word_write
WRITE.L,0x008000,0x99AABBCC,0x99AABBCC,4,cached_long_write

# Bus arbitration tests
READ.B,0x009000,0xAA,0xAA,8,bus_master_read
WRITE.B,0x009000,0xBB,0xBB,8,bus_master_write
READ.W,0x009000,0xCCDD,0xCCDD,8,bus_master_word
WRITE.W,0x009000,0xEEFF,0xEEFF,8,bus_master_word_write
READ.L,0x009000,0x00112233,0x00112233,12,bus_master_long
WRITE.L,0x009000,0x44556677,0x44556677,12,bus_master_long_write
