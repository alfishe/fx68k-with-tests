# Instruction Golden References for fx68k
# Format: instruction,operands,expected_result,expected_cycles,expected_addresses,expected_flags

# Data movement instructions
MOVE.W D0,D1,0x1234,12,0x000000,0x0000
MOVE.W (A0),D0,0x5678,16,0x001000,0x0000
MOVE.W D0,(A0),0x1234,12,0x001000,0x0000
MOVE.W #0x1234,D0,0x1234,8,0x000000,0x0000
MOVE.W (A0)+,D0,0x5678,16,0x001000,0x0000
MOVE.W D0,-(A0),0x1234,12,0x000FFE,0x0000

# Arithmetic instructions
ADD.W D0,D1,0x68AC,8,0x000000,0x0000
ADD.W #0x1234,D0,0x2468,12,0x000000,0x0000
ADD.W (A0),D0,0x68AC,16,0x001000,0x0000
SUB.W D0,D1,0x4444,8,0x000000,0x0000
SUB.W #0x1234,D0,0x0000,12,0x000000,0x0004
SUB.W (A0),D0,0x4444,16,0x001000,0x0000

# Logical instructions
AND.W D0,D1,0x1230,8,0x000000,0x0000
AND.W #0x0F0F,D0,0x0204,12,0x000000,0x0000
AND.W (A0),D0,0x1230,16,0x001000,0x0000
OR.W D0,D1,0x577C,8,0x000000,0x0000
OR.W #0x0F0F,D0,0x1F3F,12,0x000000,0x0000
OR.W (A0),D0,0x577C,16,0x001000,0x0000
EOR.W D0,D1,0x454C,8,0x000000,0x0000
EOR.W #0x0F0F,D0,0x1D3B,12,0x000000,0x0000
EOR.W (A0),D0,0x454C,16,0x001000,0x0000

# Shift and rotate instructions
ASL.W D0,0x0002,6,0x000000,0x0000
ASL.W #1,D0,0x0002,6,0x000000,0x0000
ASL.W (A0),D0,0x0002,18,0x001000,0x0000
ASR.W D0,0xC000,6,0x000000,0x0008
ASR.W #1,D0,0xC000,6,0x000000,0x0008
ASR.W (A0),D0,0xC000,18,0x001000,0x0008
ROL.W D0,0x0002,6,0x000000,0x0000
ROL.W #1,D0,0x0002,6,0x000000,0x0000
ROR.W D0,0xC000,6,0x000000,0x0008
ROR.W #1,D0,0xC000,6,0x000000,0x0008

# Branch instructions
BRA.S +4,0x000000,10,0x000008,0x0000
BEQ.S +4,0x000000,8,0x000000,0x0000
BNE.S +4,0x000000,10,0x000008,0x0000
BGT.S +4,0x000000,8,0x000000,0x0000
BLT.S +4,0x000000,10,0x000008,0x0000
BGE.S +4,0x000000,8,0x000000,0x0000
BLE.S +4,0x000000,10,0x000008,0x0000

# Compare instructions
CMP.W D0,D1,0x0000,6,0x000000,0x0004
CMP.W #0x1234,D0,0x0000,8,0x000000,0x0004
CMP.W (A0),D0,0x0000,14,0x001000,0x0004
CMPA.W D0,A0,0x0000,6,0x000000,0x0000
CMPA.W #0x1234,A0,0x0000,8,0x000000,0x0000

# Test instructions
TST.W D0,0x0000,4,0x000000,0x0004
TST.W (A0),0x0000,12,0x001000,0x0004
TAS.W D0,0x0000,4,0x000000,0x0004
TAS.W (A0),0x0000,12,0x001000,0x0004

# Stack operations
PUSH.W D0,0x0000,8,0x000000,0x0000
POP.W D0,0x0000,12,0x000000,0x0000
PUSH.W A0,0x0000,8,0x000000,0x0000
POP.W A0,0x0000,12,0x000000,0x0000

# Subroutine instructions
JSR (A0),0x0000,18,0x001000,0x0000
RTS,0x0000,16,0x000000,0x0000
JMP (A0),0x0000,8,0x001000,0x0000
BSR.S +4,0x0000,18,0x000008,0x0000

# Additional instruction types
MOVE.B D0,D1,0x12,8,0x000000,0x0000
MOVE.L D0,D1,0x12345678,12,0x000000,0x0000
MOVE.B #0x55,D0,0x55,8,0x000000,0x0000
MOVE.W #0x1234,D0,0x1234,8,0x000000,0x0000
MOVE.L #0x12345678,D0,0x12345678,12,0x000000,0x0000

# Memory addressing modes
MOVE.B (A0),D0,0x12,8,0x001000,0x0000
MOVE.B (A0)+,D0,0x12,8,0x001000,0x0000
MOVE.B -(A0),D0,0x12,8,0x000FFF,0x0000
MOVE.B 4(A0),D0,0x12,12,0x001004,0x0000
MOVE.B 4(A0,D0.W),D1,0x12,16,0x001004,0x0000

# Condition code operations
MOVE.W CCR,D0,0x0000,12,0x000000,0x0000
MOVE.W D0,CCR,0x0000,12,0x000000,0x0000
MOVE.W SR,D0,0x2000,12,0x000000,0x0000
MOVE.W D0,SR,0x2000,12,0x000000,0x0000

# Bit manipulation
BTST.B #0,D0,0x0000,8,0x000000,0x0000
BTST.B #7,D0,0x0000,8,0x000000,0x0000
BSET.B #0,D0,0x0001,8,0x000000,0x0000
BCLR.B #0,D0,0x0000,8,0x000000,0x0004

# Extended arithmetic
EXT.W D0,0x0012,4,0x000000,0x0000
EXT.L D0,0x00000012,4,0x000000,0x0000
SWAP D0,0x56781234,4,0x000000,0x0000
NEG.W D0,0xEDCC,4,0x000000,0x0008
NEG.L D0,0xEDCCEDCC,6,0x000000,0x0008

# String operations
MOVE.B (A0)+,(A1)+,0x0000,12,0x001000,0x0000
MOVE.W (A0)+,(A1)+,0x0000,12,0x001000,0x0000
MOVE.L (A0)+,(A1)+,0x0000,20,0x001000,0x0000
CMP.B (A0)+,(A1)+,0x0000,12,0x001000,0x0004

# System control
RESET,0x0000,132,0x000000,0x0000
NOP,0x0000,4,0x000000,0x0000
STOP #0x2700,0x0000,4,0x000000,0x0000
RTE,0x0000,20,0x000000,0x0000
RTR,0x0000,20,0x000000,0x0000

# Privilege instructions
MOVE.L USP,A0,0x00000000,4,0x000000,0x0000
MOVE.L A0,USP,0x00000000,4,0x000000,0x0000
MOVE.L MSP,A0,0x00000000,4,0x000000,0x0000
MOVE.L A0,MSP,0x00000000,4,0x000000,0x0000

# Trap instructions
TRAP #0,0x0000,34,0x000000,0x0000
TRAP #15,0x0000,34,0x000000,0x0000
TRAPV,0x0000,4,0x000000,0x0000
CHK.W D0,D1,0x0000,10,0x000000,0x0000

# Link and unlink
LINK A0,#-8,0x00000000,16,0x000000,0x0000
UNLK A0,0x00000000,12,0x000000,0x0000

# Return and jump
RTS,0x0000,16,0x000000,0x0000
RTR,0x0000,20,0x000000,0x0000
JMP (A0),0x0000,8,0x001000,0x0000
JSR (A0),0x0000,18,0x001000,0x0000
BSR.S +4,0x0000,18,0x000008,0x0000
BSR.W +4,0x0000,18,0x000008,0x0000
BSR.L +4,0x0000,22,0x000008,0x0000
